syntax = "proto3";

option java_package = "ma.emsi.bankgrpc.stubs";
option java_multiple_files = true;

// Enumeration for the type of account
enum TypeCompte {
  COURANT = 0;
  EPARGNE = 1;
}

// Message representing an account
message Compte {
  string id = 1;
  float solde = 2;
  string dateCreation = 3;
  TypeCompte type = 4;
}

// Message for the request to create or update an account
message CompteRequest {
  float solde = 1;
  string dateCreation = 2;
  TypeCompte type = 3;
}

// Message for balance statistics
message SoldeStats {
  int32 count = 1; // Total number of accounts
  float sum = 2;   // Sum of balances
  float average = 3; // Average of balances
}

// Messages for service requests and responses

// Request to get all accounts
message GetAllComptesRequest {}

// Response containing the list of accounts
message GetAllComptesResponse {
  repeated Compte comptes = 1;
}

// Request to get an account by ID
message GetCompteByIdRequest {
  string id = 1;
}

// Response containing the requested account
message GetCompteByIdResponse {
  Compte compte = 1;
}

// Request to get balance statistics
message GetTotalSoldeRequest {}

// Response containing the balance statistics
message GetTotalSoldeResponse {
  SoldeStats stats = 1;
}

// Request to save or update an account
message SaveCompteRequest {
  CompteRequest compte = 1;
}

// Response containing the saved account
message SaveCompteResponse {
  Compte compte = 1;
}

// Definition of the service corresponding to the GraphQL-like requests and mutations
service CompteService {
  // Equivalent to the query allComptes
  rpc AllComptes (GetAllComptesRequest) returns (GetAllComptesResponse);
  // Equivalent to the query compteById
  rpc CompteById (GetCompteByIdRequest) returns (GetCompteByIdResponse);
  // Equivalent to the query totalSolde
  rpc GetTotalSolde (GetTotalSoldeRequest) returns (GetTotalSoldeResponse);
  // Equivalent to the mutation saveCompte
  rpc SaveCompte (SaveCompteRequest) returns (SaveCompteResponse);
}
